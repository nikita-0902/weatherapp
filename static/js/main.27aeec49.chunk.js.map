{"version":3,"sources":["components/Weather.module.css","components/WeatherSearch.jsx","components/WeatherData.jsx","images/preloader.svg","components/Preloader/Preloader.jsx","redux/weatherReducer.js","components/Main.jsx","App.js","redux/redux.js","index.js"],"names":["module","exports","WeatherSearch","props","className","ws","search__data","onSubmit","api_call","type","name","required","WeatherData","weather","Math","ceil","temp","wd","winter","summer","spring","city","con","src","inf","alt","desc","how","Preloader","img","TOGGLE_IS_FETCHING","initialstate","isFetching","weatherReducer","state","action","connect","Weather","dispatch","ToggleIsFetching","useState","setWeather","setCity","setInf","setDesc","setCon","getWind","setGetwind","setHow","humidity","setHumidity","event","a","preventDefault","location","target","elements","value","url","axios","get","then","response","allresponse","data","main","icon","description","sys","country","wind","speed","feels_like","catch","error","alert","App","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,GAAK,oBAAoB,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,wBAAwB,aAAe,gC,gLCkB5JC,MAdf,SAAuBC,GACnB,OACI,sBAAKC,UAAWC,IAAGC,aAAnB,UAEI,4CAEA,uBAAMC,SAAUJ,EAAMK,SAAtB,UACI,uBAAOC,KAAK,OAAOC,KAAK,WAAWC,UAAQ,IAC3C,mDCuBDC,MA9Bf,SAAqBT,GAEjB,OACI,sBAAKC,UAAqC,qBAAlBD,EAAMU,QACvBC,KAAKC,KAAKZ,EAAMU,QAAQG,OAAS,EAC7BF,KAAKC,KAAKZ,EAAMU,QAAQG,MAAQ,EAC5BF,KAAKC,KAAKZ,EAAMU,QAAQG,OAAS,GAClCC,IAAGC,OACPD,IAAGE,OACPF,IAAGG,OANT,UAOI,8BAAIjB,EAAMkB,KAAV,KAAkBlB,EAAMmB,IAAxB,OACA,qBAAKC,IAAG,0CAAqCpB,EAAMqB,IAA3C,QAAsDC,IAAI,KAClE,8BACKX,KAAKC,KAAKZ,EAAMU,QAAQG,MAD7B,aAGA,8BACI,4BAAIb,EAAMuB,SAGd,8BACI,iCACI,4CACA,8BAAIZ,KAAKC,KAAKZ,EAAMwB,KAApB,sBC5BL,MAA0B,sCCY1BC,MARf,WACI,OACI,8BACI,qBAAKL,IAAKM,EAAKJ,IAAI,Q,eCPzBK,EAAqB,qBAEvBC,EAAe,CACfC,YAAY,GAuBDC,EApBQ,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACrD,OAAQA,EAAO1B,MACX,KAAKqB,EACD,OAAO,2BACAI,GADP,IAEIF,WAAYG,EAAOH,aAE3B,QACI,OAAOE,IC+EnB,IAYeE,eAZS,SAACF,GACrB,MAAO,CACHF,WAAYE,EAAMG,QAAQL,eAGP,SAACM,GACxB,MAAO,CACHC,iBAAkB,SAACP,GACfM,EDnFoB,SAACN,GAC7B,MAAO,CACHvB,KAAMqB,EACNE,cCgFaO,CAAiBP,QAIvBI,EAhGf,SAAcjC,GAAQ,IAAD,EAEaqC,qBAFb,mBAEV3B,EAFU,KAED4B,EAFC,OAIOD,qBAJP,mBAIVnB,EAJU,KAIJqB,EAJI,OAMKF,qBANL,mBAMVhB,EANU,KAMLmB,EANK,OAQOH,qBARP,mBAQVd,EARU,KAQJkB,EARI,OAUKJ,qBAVL,mBAUVlB,EAVU,KAULuB,EAVK,OAYaL,qBAZb,mBAYVM,EAZU,KAYDC,EAZC,OAcKP,qBAdL,mBAcVb,EAdU,KAcLqB,EAdK,OAgBeR,qBAhBf,mBAgBVS,EAhBU,KAgBAC,EAhBA,KAkBX1C,EAAQ,uCAAG,WAAO2C,GAAP,iBAAAC,EAAA,sDAEbD,EAAME,iBAEAC,EAAWH,EAAMI,OAAOC,SAASF,SAASG,MAEhDtD,EAAMoC,kBAAiB,GAGP,mCAEVmB,EAXO,4DAWoDJ,EAXpD,kBASG,mCATH,iBAabK,IAAMC,IAAIF,GAAKG,MAAK,SAAAC,GAEhB,IAAMC,EAAcD,EAASE,KAC7BvB,EAAWsB,EAAYE,MACvBvB,EAAQqB,EAAYrD,MACpBiC,EAAOoB,EAAYlD,QAAQ,GAAGqD,MAC9BtB,EAAQmB,EAAYlD,QAAQ,GAAGsD,aAC/BtB,EAAOkB,EAAYK,IAAIC,SACvBtB,EAAWgB,EAAYO,KAAKC,OAC5BvB,EAAOe,EAAYE,KAAKO,YACxBtB,EAAYa,EAAYE,KAAKhB,UAC7B9C,EAAMoC,kBAAiB,MACxBkC,OAAM,SAACC,GACN,IAAMpB,EAAWH,EAAMI,OAAOC,SAASF,SAASG,MAChDkB,MAAMD,EAAQ,IAAMpB,EAAdoB,cACNvE,EAAMoC,kBAAiB,MA5Bd,2CAAH,sDAyCd,OAEI,gCACI,cAAC,EAAD,CAAe/B,SAAUA,IAErBL,EAAM6B,WAAa,cAAC,EAAD,IAAgBnB,GAE/B,cAAC,EAAD,CACIA,QAASA,EACTQ,KAAMA,EACNG,IAAKA,EACLE,KAAMA,EACNJ,IAAKA,EACLwB,QAASA,EACTnB,IAAKA,EACLsB,SAAUA,U,MCrEnB2B,MATf,SAAazE,GACX,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,O,eCHFyE,EAAWC,YAAgB,CAC3BzC,QAASJ,IAOE8C,EAFHC,YAAYH,EAAUI,YAAgBC,MCJlDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.27aeec49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"Weather_h1__5hd0W\",\"weather__data\":\"Weather_weather__data__3jazi\",\"winter\":\"Weather_winter__H-wpx\",\"summer\":\"Weather_summer__1cLSf\",\"search__data\":\"Weather_search__data__3UFsT\"};","import React from 'react'\r\n\r\nimport ws from './Weather.module.css';\r\n\r\n\r\nfunction WeatherSearch(props) {\r\n    return (\r\n        <div className={ws.search__data}>\r\n\r\n            <h1>WeatherApp</h1>\r\n\r\n            <form onSubmit={props.api_call}>\r\n                <input type=\"text\" name=\"location\" required />\r\n                <button >Search</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherSearch;\r\n","import React, { Fragment } from 'react'\r\n\r\n\r\nimport wd from './Weather.module.css';\r\n\r\n\r\nfunction WeatherData(props) {\r\n\r\n    return (\r\n        <div className={(typeof props.weather !== \"undefined\")\r\n            ? (Math.ceil(props.weather.temp) <= 0)\r\n                ? (Math.ceil(props.weather.temp) > 5)\r\n                    ? (Math.ceil(props.weather.temp) >= 20)\r\n                    : wd.winter\r\n                : wd.summer\r\n            : wd.spring}>\r\n            <p>{props.city}, {props.con} </p>\r\n            <img src={`http://openweathermap.org/img/w/${props.inf}.png`} alt=\"\" />\r\n            <p >\r\n                {Math.ceil(props.weather.temp)} &#8451;\r\n            </p>\r\n            <div>\r\n                <p>{props.desc}</p>\r\n\r\n            </div>\r\n            <div /* className={wd.temp} */>\r\n                <span>\r\n                    <p>Feels like:</p>\r\n                    <p>{Math.ceil(props.how)} &#8451;</p>\r\n                </span>\r\n            </div>\r\n        </ div >\r\n    )\r\n}\r\n\r\n\r\nexport default WeatherData;\r\n","export default __webpack_public_path__ + \"static/media/preloader.7fa4f878.svg\";","import React from 'react'\r\nimport img from '../../images/preloader.svg';\r\n\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <div>\r\n            <img src={img} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialstate = {\r\n    isFetching: false\r\n}\r\n\r\nconst weatherReducer = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const ToggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\n\r\nexport default weatherReducer;","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport WeatherSearch from './WeatherSearch';\r\nimport WeatherData from './WeatherData';\r\nimport Preloader from './Preloader/Preloader';\r\nimport { connect } from 'react-redux';\r\nimport { ToggleIsFetching } from '../redux/weatherReducer';\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const [weather, setWeather] = useState();\r\n\r\n    const [city, setCity] = useState();\r\n\r\n    const [inf, setInf] = useState();\r\n\r\n    const [desc, setDesc] = useState();\r\n\r\n    const [con, setCon] = useState();\r\n\r\n    const [getWind, setGetwind] = useState();\r\n\r\n    const [how, setHow] = useState();\r\n\r\n    const [humidity, setHumidity] = useState();\r\n\r\n    const api_call = async (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const location = event.target.elements.location.value;\r\n\r\n        props.ToggleIsFetching(true);\r\n\r\n\r\n        const API_KEY = \"2276b26b72c2eec1c76727aaea79c4f1\";\r\n\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}&units=metric`;\r\n\r\n        axios.get(url).then(response => {\r\n\r\n            const allresponse = response.data;\r\n            setWeather(allresponse.main);\r\n            setCity(allresponse.name);\r\n            setInf(allresponse.weather[0].icon);\r\n            setDesc(allresponse.weather[0].description);\r\n            setCon(allresponse.sys.country);\r\n            setGetwind(allresponse.wind.speed);\r\n            setHow(allresponse.main.feels_like);\r\n            setHumidity(allresponse.main.humidity);\r\n            props.ToggleIsFetching(false);\r\n        }).catch((error) => {\r\n            const location = event.target.elements.location.value;\r\n            alert(error + ' ' + location + ' ' + 'not found');\r\n            props.ToggleIsFetching(false);\r\n            \r\n\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <WeatherSearch api_call={api_call} />\r\n            {\r\n                props.isFetching ? <Preloader /> : weather\r\n                    &&\r\n                    <WeatherData\r\n                        weather={weather}\r\n                        city={city}\r\n                        inf={inf}\r\n                        desc={desc}\r\n                        con={con}\r\n                        getWind={getWind}\r\n                        how={how}\r\n                        humidity={humidity}\r\n\r\n                    />\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isFetching: state.Weather.isFetching\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        ToggleIsFetching: (isFetching) => {\r\n            dispatch(ToggleIsFetching(isFetching));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React from 'react';\nimport Main from './components/Main';\n\nimport './App.css';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    Weather: weatherReducer,\r\n\r\n\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n\n);\n\n"],"sourceRoot":""}